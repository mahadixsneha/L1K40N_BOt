import os
import logging
import random
import asyncio
from telegram import Update
from telegram.ext import CommandHandler, ContextTypes, Application
import yt_dlp
import openai

logger = logging.getLogger(__name__)
openai.api_key = os.getenv("OPENAI_API_KEY")

# ‡¶á‡¶â‡¶ü‡¶ø‡¶â‡¶¨ ‡¶ó‡¶æ‡¶®
async def song_downloader(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not context.args:
        await update.message.reply_text("‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞: /song <‡¶ó‡¶æ‡¶®‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶¨‡¶æ ‡¶á‡¶â‡¶ü‡¶ø‡¶â‡¶¨ ‡¶≤‡¶ø‡¶ô‡ßç‡¶ï>")
        return

    query = " ".join(context.args)
    message = await update.message.reply_text(f"üîé '{query}' ‡¶ñ‡ßã‡¶Å‡¶ú‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá...")

    ydl_opts = {
        'format': 'bestaudio/best', 'outtmpl': '%(title)s.%(ext)s', 'noplaylist': True,
        'postprocessors': [{'key': 'FFmpegExtractAudio', 'preferredcodec': 'mp3', 'preferredquality': '192'}],
        'default_search': 'ytsearch',
    }

    filename = ""
    try:
        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            info = ydl.extract_info(query, download=False)
            if 'entries' in info: info = info['entries'][0]
            
            file_size = info.get('filesize') or info.get('filesize_approx', 0)
            if file_size > 50 * 1024 * 1024: # 50 MB limit
                await message.edit_text("‡¶¶‡ßÅ‡¶É‡¶ñ‡¶ø‡¶§, ‡¶´‡¶æ‡¶á‡¶≤‡¶ü‡¶ø 50MB ‡¶è‡¶∞ ‡¶ö‡ßá‡ßü‡ßá ‡¶¨‡ßú ‡¶π‡¶ì‡ßü‡¶æ‡ßü ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã ‡¶∏‡¶Æ‡ßç‡¶≠‡¶¨ ‡¶®‡ßü‡•§")
                return

            await message.edit_text(f"üì• '{info['title']}' ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá...")
            ydl.download([info['webpage_url']])
            filename = ydl.prepare_filename(info).rsplit('.', 1)[0] + '.mp3'

            await message.edit_text("üì§ ‡¶ó‡¶æ‡¶®‡¶ü‡¶ø ‡¶Ü‡¶™‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá...")
            await context.bot.send_audio(
                chat_id=update.effective_chat.id, audio=open(filename, 'rb'),
                title=info.get('title'), duration=info.get('duration')
            )
            await message.delete()
    except Exception as e:
        logger.error(f"YouTube ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶¨‡ßç‡¶Ø‡¶∞‡ßç‡¶•: {e}")
        await message.edit_text(f"‡¶¶‡ßÅ‡¶É‡¶ñ‡¶ø‡¶§, ‡¶ó‡¶æ‡¶®‡¶ü‡¶ø ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§")
    finally:
        if filename and os.path.exists(filename):
            os.remove(filename)

# AI ‡¶ö‡ßç‡¶Ø‡¶æ‡¶ü
async def ask_ai(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not openai.api_key:
        await update.message.reply_text("AI ‡¶´‡¶ø‡¶ö‡¶æ‡¶∞‡¶ü‡¶ø ‡¶ï‡¶®‡¶´‡¶ø‡¶ó‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡¶®‡¶ø‡•§")
        return
    if not context.args:
        await update.message.reply_text("‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞: /ask <‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶®>")
        return
    
    question = " ".join(context.args)
    await update.message.reply_chat_action('typing')
    
    try:
        response = await asyncio.to_thread(
            openai.ChatCompletion.create,
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "You are L1K40N, a friendly and helpful Telegram bot from Bangladesh."},
                {"role": "user", "content": question}
            ]
        )
        answer = response.choices[0].message.content
        await update.message.reply_text(answer)
    except Exception as e:
        logger.error(f"OpenAI API Error: {e}")
        await update.message.reply_text("‡¶¶‡ßÅ‡¶É‡¶ñ‡¶ø‡¶§, AI ‡¶è‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶∏‡¶Ç‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá‡•§")

# ‡¶´‡¶æ‡¶® ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶°‡¶∏
async def joke(update: Update, context: ContextTypes.DEFAULT_TYPE):
    jokes = ["‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶ï: ‡¶§‡ßã‡¶Æ‡¶∞‡¶æ ‡¶∏‡¶¨‡¶æ‡¶á ‡¶è‡¶Æ‡¶® ‡¶è‡¶ï‡¶ü‡¶æ ‡¶ï‡¶æ‡¶ú ‡¶è‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶¨‡¶≤ ‡¶Ø‡¶æ ‡¶§‡ßã‡¶Æ‡¶∞‡¶æ ‡¶ò‡ßÅ‡¶Æ‡¶ø‡ßü‡ßá‡¶ì ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßã‡•§ ‡¶õ‡¶æ‡¶§‡ßç‡¶∞: ‡¶∏‡ßç‡¶¨‡¶™‡ßç‡¶® ‡¶¶‡ßá‡¶ñ‡¶æ ‡¶∏‡ßç‡¶Ø‡¶æ‡¶∞‡•§", "‡¶∞‡ßã‡¶ó‡ßÄ: ‡¶°‡¶æ‡¶ï‡ßç‡¶§‡¶æ‡¶∞ ‡¶∏‡¶æ‡¶π‡ßá‡¶¨, ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶∏‡¶¨‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶¶‡ßÅ‡¶ü‡ßã ‡¶ï‡¶∞‡ßá ‡¶¶‡ßá‡¶ñ‡¶æ‡¶∞ ‡¶∞‡ßã‡¶ó ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§ ‡¶°‡¶æ‡¶ï‡ßç‡¶§‡¶æ‡¶∞: ‡¶Ü‡¶ö‡ßç‡¶õ‡¶æ, ‡¶ê ‡¶ö‡ßá‡ßü‡¶æ‡¶∞‡¶ü‡¶æ‡ßü ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞‡¶æ ‡¶¶‡ßÅ‡¶ú‡¶® ‡¶¨‡¶∏‡ßÅ‡¶®‡•§"]
    await update.message.reply_text(random.choice(jokes))

def register_handlers(application: Application):
    application.add_handler(CommandHandler("song", song_downloader))
    application.add_handler(CommandHandler("ask", ask_ai))
    application.add_handler(CommandHandler("joke", joke))
